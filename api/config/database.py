import os
from bson import CodecOptions, UuidRepresentation
from motor.motor_asyncio import AsyncIOMotorClient
from .config import get_settings

class Database:
    client: AsyncIOMotorClient = None
    database = None

db = Database()
settings = get_settings()

async def connect_to_mongo():
    # 1. T·∫°o client MongoDB (kh√¥ng truy·ªÅn codec_options ·ªü ƒë√¢y)
    db.client = AsyncIOMotorClient(settings.mongodb_url)

    # 2. ƒê·ªãnh nghƒ©a codec_options (√°p d·ª•ng ·ªü c·∫•p database)
    codec_options = CodecOptions(
        uuid_representation=UuidRepresentation.STANDARD
    )

    # 3. L·∫•y database v√† √°p d·ª•ng codec_options t·∫°i ƒë√¢y ‚úÖ
    db.database = db.client.get_database(
        settings.database_name,
        codec_options=codec_options
    )

    print("‚úÖ Connected to MongoDB")

async def close_mongo_connection():
    if db.client:
        db.client.close()
        print("üõë Disconnected from MongoDB")

def get_database():
    return db.database
